{"version":3,"sources":["components/Pages.js","actions/index.js","components/Home.js","components/Transactions.js","components/Account.js","components/App.js","reducers/accountReducer.js","reducers/transReducer.js","reducers/index.js","index.js"],"names":["Pages","pageName","this","props","currentView","event","preventDefault","onViewChange","className","isActivePage","onClick","e","onNavClick","React","Component","deleteAcct","acctID","type","payload","Home","state","currentPage","accounts","map","acct","_id","name","balance","id","accList","accountsSeg","connect","Transactions","transactions","trans","accountId","amount","transList","transSeg","Account","onAddDeposit","depositAcct","newTrans","setState","onWithdraw","withdrawAcct","tActions","forEach","transaction","push","hold","class","placeholder","onChange","target","value","App","view","errorText","getData","axios","get","then","response","setAccounts","data","catch","error","transError","setTransactions","jsx","bind","wrapPage","errorMessage","errors","DEFAULT_STATE","sortAccounts","newState","account","accountReducer","action","idxAdd","findIndex","t","parseFloat","idxSub","idx","splice","transReducer","length","combineReducers","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.c93ba20a.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nclass Pages extends React.Component {\r\n\r\n    isActivePage(pageName) {\r\n        return (pageName === this.props.currentView ? 'nav-link active' : 'nav-link')\r\n    }\r\n\r\n    onNavClick(event, pageName) {\r\n        event.preventDefault();\r\n        this.props.onViewChange(pageName);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='nav pages'>\r\n                <div className='nav-item'>\r\n                    <a className={this.isActivePage('Home')} onClick={(e) => this.onNavClick(e, 'Home')}>\r\n                        Home\r\n                    </a>\r\n                </div>\r\n                <div className='nav-item'>\r\n                    <a className={this.isActivePage('Transactions')} onClick={(e) => this.onNavClick(e, 'Transactions')}>\r\n                        Transactions\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Pages;","export const transError = errorMessage => {\r\n    return {\r\n        type: 'TRANS_ERROR'\r\n    }\r\n};\r\n\r\nexport const setAccounts = accounts => {\r\n    return {\r\n        type: 'SET_ACCOUNTS',\r\n        payload: {\r\n            accounts\r\n        }\r\n    }\r\n};\r\n\r\nexport const setTransactions = transactions => {\r\n    return {\r\n        type: 'SET_TRANSACTIONS',\r\n        payload: {\r\n            transactions\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteAcct = (acctID) => {\r\n    return {\r\n        type: 'DELETE_ACCOUNT',\r\n        payload: acctID\r\n    }\r\n};\r\n\r\nexport const depositAcct = (acctID, amount) => {\r\n    return {\r\n        type: 'ADD_FUNDS',\r\n        payload: {\r\n            acctID,\r\n            amount\r\n        }\r\n    };\r\n}\r\n\r\nexport const newTrans = (type, accountId, amount, name) => {\r\n    return {\r\n        type: 'CHANGE_FUNDS',\r\n        payload: {\r\n            type,\r\n            accountId,\r\n            amount,\r\n            name\r\n        }\r\n    };\r\n}\r\n\r\nexport const withdrawAcct = (acctID, amount) => {\r\n    return {\r\n        type: 'BROKE_NOW',\r\n        payload: {\r\n            acctID,\r\n            amount\r\n        }\r\n    };\r\n}\r\n\r\n/*export const withdrawTrans = (acctID, amount, reason) => {\r\n    return {\r\n        type: 'WITHDRAW_FUNDS',\r\n        payload: {\r\n            type: \"withdraw\",\r\n            acctID,\r\n            amount,\r\n            reason\r\n        }\r\n    };\r\n} */","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteAcct} from \"../actions\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        currentPage: '/'\r\n    } //might not deal with this\r\n\r\n    isActivePage(pageName) {\r\n        return (pageName === this.props.currentView ? 'nav-link active' : 'nav-link')\r\n    }\r\n\r\n    onNavClick(event, pageName) {\r\n        event.preventDefault();\r\n        this.props.onViewChange(pageName);\r\n    }\r\n\r\n    accountsSeg () {\r\n        let accountList = this.props.accounts;\r\n\r\n        return accountList.map(acct => {\r\n            return (\r\n                <div className=\"card\" key={acct.id}>\r\n                    <div className=\"cardMain\">\r\n                        <h3 className=\"cardID\">Account ID: { acct._id }</h3>\r\n                        <h4 className=\"cardName\">Holder: { acct.name }</h4>\r\n                        <h5 className=\"cardBalance\">Balance: ${ acct.balance } </h5>\r\n                        <div className=\"btnHolster\">\r\n                            <button type=\"button\" className={this.isActivePage('Account')} onClick={(e) => this.onNavClick(e, 'Account')}>  View Account </button>\r\n                            <button type=\"button\" onClick={() => {this.props.deleteAcct(acct._id)}} className=\"accDelete\"> Delete Account </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const accList = this.accountsSeg();\r\n        return (\r\n            <div className=\"container\">\r\n                <h1> MONEYBANKS </h1>\r\n                <h2> Accounts </h2>\r\n                <div className=\"accList\">\r\n                        { accList }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        accounts: state.accounts.accounts\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {deleteAcct}) (Home);","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Transactions extends React.Component {\r\n    state = {\r\n        currentPage: '/'\r\n    } //might not deal with this\r\n\r\n    transSeg () {\r\n        let transList = this.props.transactions;\r\n\r\n        return transList.map(trans => {\r\n            return (\r\n                    <tr className=\"transMain\">\r\n                        <td className=\"tbleID\"> { trans._id }</td>\r\n                        <td className=\"tbleAccID\"> { trans.accountId }</td>\r\n                        <td className=\"tbleType\"> { trans.type } </td>\r\n                        <td className=\"tbleBalance\"> ${ trans.amount } </td>\r\n                        <td className=\"tbleName\"> { trans.name } </td>\r\n                    </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const transList = this.transSeg();\r\n\r\n        return (\r\n            <div className=\"tble-con\">\r\n                <h1> MONEYBANKS </h1>\r\n                <h2> Transactions </h2>\r\n                <table className=\"transList\">\r\n                        <tr>\r\n                            <th className=\"tbleID\"> ID</th>\r\n                            <th className=\"tbleAccID\"> Account ID</th>\r\n                            <th className=\"tbleType\"> Type</th>\r\n                            <th className=\"tbleBalance\"> Amount</th>\r\n                            <th className=\"tbleName\"> Note</th>\r\n                        </tr>\r\n                        { transList }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        transactions: state.transactions.transactions\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(Transactions);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteAcct, newTrans, depositAcct, withdrawAcct } from \"../actions\";\r\n\r\nclass Account extends React.Component {\r\n    state = {\r\n        currentPage: '/'\r\n    } //might not deal with this\r\n\r\n    onAddDeposit = (event) => {\r\n        let type = 'deposit';\r\n        event.preventDefault();\r\n        this.props.depositAcct(1, this.state.amount);\r\n        this.props.newTrans(type, 1, this.state.amount, this.state.name);\r\n        this.setState({amount: '', name: ''});\r\n    }\r\n\r\n    onWithdraw = (event) => {\r\n        let type = 'withdraw';\r\n        event.preventDefault();\r\n        this.props.withdrawAcct(1, this.state.amount);\r\n        this.props.newTrans(type, 1, this.state.amount, this.state.name);\r\n        this.setState({amount: '', name: ''});\r\n    }\r\n\r\n    transSeg () {\r\n        let transList = this.props.transactions;\r\n        let tActions = [];\r\n        transList.forEach(transaction => {\r\n            if (transaction.accountId == 2) /*this.props.match.params.id*/{\r\n                tActions.push(transaction)\r\n            }\r\n        });\r\n\r\n        return tActions.map(trans => {\r\n            return (\r\n                <tr className=\"transMain\">\r\n                    <td className=\"tbleID\"> { trans._id }</td>\r\n                    <td className=\"tbleAccID\"> { trans.accountId }</td>\r\n                    <td className=\"tbleType\"> { trans.type } </td>\r\n                    <td className=\"tbleBalance\"> ${ trans.amount } </td>\r\n                    <td className=\"tbleName\"> { trans.name } </td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const transList = this.transSeg();\r\n        let hold = [];\r\n        hold.push(this.props.accounts);\r\n\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <h1> MONEYBANKS </h1>\r\n                <h2> Account </h2>\r\n                <div className=\"form\">\r\n                    <h3> { hold.name } Info </h3>\r\n                    <p> Current Balance: { hold.balance }</p>\r\n                    <div>\r\n                        <button > Edit Account </button>\r\n                        <button type=\"button\" onClick={() => {this.props.deleteAcct(2)}} className=\"accDelete\"> Delete Account </button>\r\n                    </div>\r\n                </div>\r\n            <div className=\"transTble\">\r\n                <h3> Transactions </h3>\r\n                <table className=\"transList\">\r\n                    <tr>\r\n                        <th className=\"tbleID\"> ID</th>\r\n                        <th className=\"tbleAccID\"> Account ID</th>\r\n                        <th className=\"tbleType\"> Type</th>\r\n                        <th className=\"tbleBalance\"> Amount</th>\r\n                        <th className=\"tbleName\"> Note</th>\r\n                    </tr>\r\n                    { transList }\r\n                </table>\r\n            </div>\r\n                <div className=\"new-trans\">\r\n                    <h3 class='money'> New Transaction </h3>\r\n                    <div className=\"Form-edit\">\r\n                        <h4 className=\"id-name\"> Enter Amount</h4>\r\n                        <form>\r\n                            <input placeholder=\"Enter Amount\" id=\"amount\"\r\n                                   onChange={(e) => this.setState({amount: e.target.value})}/>\r\n                            <input placeholder=\"Enter Description\" id=\"reason\"\r\n                                   onChange={(e) => this.setState({name: e.target.value})}/>\r\n\r\n                            <button type=\"button\" onClick={this.onAddDeposit} className=\"depF\"> Deposit Amount </button>\r\n                            <button type=\"button\" onClick={this.onWithdraw} className=\"WitF\"> Withdraw Amount </button>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        accounts: state.accounts.accounts,\r\n        transactions: state.transactions.transactions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteAcct, newTrans, depositAcct, withdrawAcct }) (Account);","// imports\n\nimport '../App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\n\nimport Pages from './Pages';\nimport { setAccounts, setTransactions, transError } from \"../actions\";\nimport Home from './Home';\nimport Transactions from './Transactions';\nimport Account from \"./Account\";\n\n\nclass App extends React.Component {\n  state = {\n      view: 'Account',\n      errorText: ''\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    axios.get('https://my-json-server.typicode.com/bnissen24/project2DB/accounts')\n        .then(response => {\n          this.props.setAccounts(response.data);\n        }).catch(error => {\n            this.props.transError();\n    });\n    axios.get('https://my-json-server.typicode.com/bnissen24/project2DB/transactions')\n        .then(response => {\n          this.props.setTransactions(response.data);\n        }).catch(error => {\n        this.props.transError();\n    });\n\n  }\n\n  onViewChange(view) {\n    this.setState({ view });\n  }\n\n  wrapPage(jsx) {\n    const { view } = this.state;\n    return (\n        <div className=\"container\">\n          <Pages currentView={view} onViewChange={this.onViewChange.bind(this)}/>\n          {jsx}\n        </div>\n    );\n  }\n\n  render() {\n    const { view } = this.state;\n\n    switch (view) {\n\n        case 'Home':\n            return (this.wrapPage(<Home currentView={view} onViewChange={this.onViewChange.bind(this)} />));\n        case 'Transactions':\n            return (this.wrapPage(<Transactions />));\n        case 'Account':\n            return (this.wrapPage(<Account />));\n        default:\n            return (this.wrapPage(<Home />));\n    }\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    errorMessage: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, { setAccounts, setTransactions, transError })(App);","const DEFAULT_STATE = {\r\n    accounts: []\r\n}\r\n\r\nconst sortAccounts = (state) => {\r\n    let newState = {\r\n        accounts: [ ...state.accounts ]\r\n    };\r\n    newState.accounts.forEach(account => {\r\n    });\r\n    return newState;\r\n};\r\n\r\nconst accountReducer = (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ACCOUNTS':\r\n            return action.payload;\r\n        case 'ADD_FUNDS':\r\n            const idxAdd = state.accounts.findIndex(t => t._id = action.payload.acctID);\r\n            state.accounts[idxAdd].balance = parseFloat(state.accounts[idxAdd].balance) + parseFloat(action.payload['amount']);\r\n            return sortAccounts(state);\r\n        case 'BROKE_NOW':\r\n            const idxSub = state.accounts.findIndex(t => t._id = action.payload.acctID);\r\n            state.accounts[idxSub].balance = parseFloat(state.accounts[idxSub].balance) - parseFloat(action.payload['amount']);\r\n            return sortAccounts(state);\r\n        case 'DELETE_ACCOUNT':\r\n            const idx = state.accounts.findIndex(t => t._id === action.payload);\r\n            state.accounts.splice(idx, 1);\r\n            return sortAccounts(state);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default accountReducer;","const DEFAULT_STATE = {\r\n    transactions: []\r\n}\r\n\r\nconst sortTrans = (state) => {\r\n    let newState = {\r\n        transactions: [ ...state.transactions ]\r\n    }\r\n    newState.transactions.forEach(transaction => {\r\n\r\n        });\r\n    return newState;\r\n}\r\n\r\nconst transReducer = (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TRANSACTIONS':\r\n            return action.payload;\r\n        case 'CHANGE_FUNDS':\r\n            let newTrans = {\r\n                '_id': state.transactions.length,\r\n                'accountId': action.payload['accountId'],\r\n                'type': action.payload['type'],\r\n                'amount': action.payload['amount'],\r\n                'name': action.payload['name']\r\n            }\r\n            state.transactions.push(newTrans);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default transReducer;","import { combineReducers } from 'redux';\r\nimport accountReducer from \"./accountReducer\";\r\nimport transReducer from \"./transReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    accounts: accountReducer,\r\n    transactions: transReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.css';\nimport App from './components/App';\nimport reducers from './reducers'\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}