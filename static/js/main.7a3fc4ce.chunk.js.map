{"version":3,"sources":["components/Pages.js","actions/index.js","components/Home.js","components/Transactions.js","components/Account.js","components/App.js","reducers/accountReducer.js","reducers/transReducer.js","reducers/index.js","index.js"],"names":["Pages","state","currentView","pageName","this","props","event","setState","className","isActivePage","to","onClick","e","onNavClick","React","Component","deleteAcct","acctID","type","payload","Home","accounts","map","acct","_id","name","balance","id","accList","accountsSeg","connect","Transactions","currentPage","transactions","trans","accountId","amount","transList","transSeg","Account","thisAcct","parseInt","match","params","onAddDeposit","preventDefault","depositAcct","newTrans","onWithdraw","withdrawAcct","tActions","forEach","transaction","push","selected","act","class","placeholder","onChange","target","value","App","view","errorText","getData","axios","get","then","response","setAccounts","data","catch","error","transError","setTransactions","jsx","onViewChange","bind","path","exact","component","errorMessage","errors","DEFAULT_STATE","sortAccounts","newState","account","accountReducer","action","idxAdd","findIndex","t","parseFloat","idxSub","idx","splice","transReducer","length","combineReducers","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.7a3fc4ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Pages extends React.Component {\r\n    state = {\r\n        currentView: '/banking-app/'\r\n    }\r\n\r\n    isActivePage(pageName) {\r\n        return (pageName === this.props.currentView) ? 'nav-link active' : 'nav-link';\r\n    }\r\n\r\n    onNavClick(event, pageName) {\r\n        this.setState(\r\n            {\r\n                currentView: pageName\r\n            }\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='nav pages'>\r\n                <div className='nav-item'>\r\n                    <Link className={this.isActivePage('/banking-app/')} to=\"/banking-app/\" onClick={(e) => this.onNavClick(e, '/banking-app/')}>\r\n                        Home\r\n                    </Link>\r\n                </div>\r\n                <div className='nav-item'>\r\n                    <Link className={this.isActivePage('/Transactions')} to=\"/Transactions\" onClick={(e) => this.onNavClick(e, '/Transactions')}>\r\n                        Transactions\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Pages;","export const transError = errorMessage => {\r\n    return {\r\n        type: 'TRANS_ERROR'\r\n    }\r\n};\r\n\r\nexport const setAccounts = accounts => {\r\n    return {\r\n        type: 'SET_ACCOUNTS',\r\n        payload: {\r\n            accounts\r\n        }\r\n    }\r\n};\r\n\r\nexport const setTransactions = transactions => {\r\n    return {\r\n        type: 'SET_TRANSACTIONS',\r\n        payload: {\r\n            transactions\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteAcct = (acctID) => {\r\n    return {\r\n        type: 'DELETE_ACCOUNT',\r\n        payload: acctID\r\n    }\r\n};\r\n\r\nexport const depositAcct = (acctID, amount) => {\r\n    return {\r\n        type: 'ADD_FUNDS',\r\n        payload: {\r\n            acctID,\r\n            amount\r\n        }\r\n    };\r\n}\r\n\r\nexport const newTrans = (type, accountId, amount, name) => {\r\n    return {\r\n        type: 'CHANGE_FUNDS',\r\n        payload: {\r\n            type,\r\n            accountId,\r\n            amount,\r\n            name\r\n        }\r\n    };\r\n}\r\n\r\nexport const withdrawAcct = (acctID, amount) => {\r\n    return {\r\n        type: 'BROKE_NOW',\r\n        payload: {\r\n            acctID,\r\n            amount\r\n        }\r\n    };\r\n}\r\n\r\n/*export const withdrawTrans = (acctID, amount, reason) => {\r\n    return {\r\n        type: 'WITHDRAW_FUNDS',\r\n        payload: {\r\n            type: \"withdraw\",\r\n            acctID,\r\n            amount,\r\n            reason\r\n        }\r\n    };\r\n} */","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteAcct} from \"../actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        currentView: '/'\r\n    } //might not deal with this\r\n\r\n    isActivePage(pageName) {\r\n        return (pageName === this.props.currentView ? 'nav-link active' : 'nav-link')\r\n    }\r\n\r\n    onNavClick(event, pageName) {\r\n        this.setState({ currentView: pageName})\r\n    }\r\n\r\n    accountsSeg () {\r\n        let accountList = this.props.accounts;\r\n\r\n        return accountList.map(acct => {\r\n            return (\r\n                <div className=\"card\" key={acct.id}>\r\n                    <div className=\"cardMain\">\r\n                        <h3 className=\"cardID\">Account ID: { acct._id }</h3>\r\n                        <h4 className=\"cardName\">Holder: { acct.name }</h4>\r\n                        <h5 className=\"cardBalance\">Balance: ${ acct.balance } </h5>\r\n                        <div className=\"btnHolster\">\r\n                            <Link className={this.isActivePage(\"Account/:id\")} to={\"Account/\" + acct._id} onClick={(e) => this.onNavClick(e, \"Account/:id\")} id=\"viewA\"> View Account </Link>\r\n                            <button type=\"button\" onClick={() => {this.props.deleteAcct(acct._id)}} className=\"accDelete\"> Delete Account </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const accList = this.accountsSeg();\r\n        return (\r\n            <div className=\"container\">\r\n                <h1> MONEYBANKS </h1>\r\n                <h2> Accounts </h2>\r\n                <div className=\"accList\">\r\n                    { accList }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        accounts: state.accounts.accounts\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {deleteAcct}) (Home);","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Transactions extends React.Component {\r\n    state = {\r\n        currentPage: '/'\r\n    } //might not deal with this\r\n\r\n    transSeg () {\r\n        let transList = this.props.transactions;\r\n\r\n        return transList.map(trans => {\r\n            return (\r\n                    <tr className=\"transMain\">\r\n                        <td className=\"tbleID\"> { trans._id }</td>\r\n                        <td className=\"tbleAccID\"> { trans.accountId }</td>\r\n                        <td className=\"tbleType\"> { trans.type } </td>\r\n                        <td className=\"tbleBalance\"> ${ trans.amount } </td>\r\n                        <td className=\"tbleName\"> { trans.name } </td>\r\n                    </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const transList = this.transSeg();\r\n\r\n        return (\r\n            <div className=\"tble-con\">\r\n                <h1> MONEYBANKS </h1>\r\n                <h2> Transactions </h2>\r\n                <table className=\"transList\">\r\n                        <tr>\r\n                            <th className=\"tbleID\"> ID</th>\r\n                            <th className=\"tbleAccID\"> Account ID</th>\r\n                            <th className=\"tbleType\"> Type</th>\r\n                            <th className=\"tbleBalance\"> Amount</th>\r\n                            <th className=\"tbleName\"> Note</th>\r\n                        </tr>\r\n                        { transList }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        transactions: state.transactions.transactions\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(Transactions);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteAcct, newTrans, depositAcct, withdrawAcct } from \"../actions\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nclass Account extends React.Component {\r\n\r\n    thisAcct = parseInt(this.props.match.params.id);\r\n\r\n    isActivePage(pageName) {\r\n        return (pageName === this.props.currentView ? 'nav-link active' : 'nav-link')\r\n    }\r\n\r\n    onNavClick(event, pageName) {\r\n        this.setState({ currentView: pageName})\r\n        this.props.deleteAcct(this.thisAcct);\r\n    }\r\n\r\n    onAddDeposit = (event) => {\r\n        let type = 'deposit';\r\n        event.preventDefault();\r\n        this.props.depositAcct(this.thisAcct, this.state.amount);\r\n        this.props.newTrans(type, this.thisAcct, this.state.amount, this.state.name);\r\n        this.setState({amount: '', name: ''});\r\n    }\r\n\r\n    onWithdraw = (event) => {\r\n        let type = 'withdraw';\r\n        event.preventDefault();\r\n        this.props.withdrawAcct(this.thisAcct, this.state.amount);\r\n        this.props.newTrans(type, this.thisAcct, this.state.amount, this.state.name);\r\n        this.setState({amount: '', name: ''});\r\n    }\r\n\r\n    transSeg () {\r\n        let transList = this.props.transactions;\r\n        let tActions = [];\r\n        transList.forEach(transaction => {\r\n            if (transaction.accountId === this.thisAcct) {\r\n                tActions.push(transaction)\r\n            }\r\n        });\r\n\r\n        return tActions.map(trans => {\r\n            return (\r\n                <tr className=\"transMain\">\r\n                    <td className=\"tbleID\"> { trans._id }</td>\r\n                    <td className=\"tbleAccID\"> { trans.accountId }</td>\r\n                    <td className=\"tbleType\"> { trans.type } </td>\r\n                    <td className=\"tbleBalance\"> ${ trans.amount } </td>\r\n                    <td className=\"tbleName\"> { trans.name } </td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const transList = this.transSeg();\r\n\r\n        let selected = [];\r\n        let acct = this.props.accounts;\r\n\r\n        acct.forEach(act => {\r\n            if (act._id === this.thisAcct) { selected.push(act); }})\r\n\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <h1> MONEYBANKS </h1>\r\n                <h2> { selected[0].name } Account </h2>\r\n                <div className=\"form\">\r\n                    <h3> Account Info </h3>\r\n                    <p> Current Balance: ${ selected[0].balance }</p>\r\n                    <div>\r\n                        <button > Edit Account </button>\r\n                        <Link className={this.isActivePage(\"/banking-app/\")} to={\"/banking-app/\"} onClick={(e) => this.onNavClick(e, \"/banking-app/\")} id=\"delA\"> Delete Account </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"transTble\">\r\n                    <h3> Transactions </h3>\r\n                    <table className=\"transList\">\r\n                        <tr>\r\n                            <th className=\"tbleID\"> ID</th>\r\n                            <th className=\"tbleAccID\"> Account ID</th>\r\n                            <th className=\"tbleType\"> Type</th>\r\n                            <th className=\"tbleBalance\"> Amount</th>\r\n                            <th className=\"tbleName\"> Note</th>\r\n                        </tr>\r\n                        { transList }\r\n                    </table>\r\n                </div>\r\n                <div className=\"new-trans\">\r\n                    <h3 class='money'> New Transaction </h3>\r\n                    <div className=\"Form-edit\">\r\n                        <h4 className=\"id-name\"> Enter Amount</h4>\r\n                        <form>\r\n                            <input placeholder=\"Enter Amount\" id=\"amount\"\r\n                                   onChange={(e) => this.setState({amount: e.target.value})}/>\r\n                            <input placeholder=\"Enter Description\" id=\"reason\"\r\n                                   onChange={(e) => this.setState({name: e.target.value})}/>\r\n\r\n                            <button type=\"button\" onClick={this.onAddDeposit} className=\"depF\"> Deposit Amount </button>\r\n                            <button type=\"button\" onClick={this.onWithdraw} className=\"WitF\"> Withdraw Amount </button>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        accounts: state.accounts.accounts,\r\n        transactions: state.transactions.transactions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteAcct, newTrans, depositAcct, withdrawAcct }) (Account);","import '../App.css';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route} from \"react-router-dom\";\r\n\r\n\r\nimport Pages from './Pages';\r\nimport { setAccounts, setTransactions, transError } from \"../actions\";\r\nimport Home from './Home';\r\nimport Transactions from './Transactions';\r\nimport Account from \"./Account\";\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        view: '/banking-app/',\r\n        errorText: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        axios.get('https://my-json-server.typicode.com/bnissen24/project2DB/accounts')\r\n            .then(response => {\r\n                this.props.setAccounts(response.data);\r\n            }).catch(error => {\r\n            this.props.transError();\r\n        });\r\n        axios.get('https://my-json-server.typicode.com/bnissen24/project2DB/transactions')\r\n            .then(response => {\r\n                this.props.setTransactions(response.data);\r\n            }).catch(error => {\r\n            this.props.transError();\r\n        });\r\n\r\n    }\r\n\r\n    onViewChange(view) {\r\n        this.setState({ view });\r\n    }\r\n\r\n    wrapPage(jsx) {\r\n        const { view } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Pages currentView={view} onViewChange={this.onViewChange.bind(this)}/>\r\n                {jsx}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <Pages />\r\n                <div>\r\n                    <Route path=\"/banking-app/\" exact component={ Home } />\r\n                    <Route path=\"/Transactions\" component={ Transactions } />\r\n                    <Route path=\"/Account/:id\" component={ Account } />\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n\r\n        /*switch (view) {\r\n\r\n            case 'Home':\r\n                return (this.wrapPage(<Home currentView={view} onViewChange={this.onViewChange.bind(this)} />));\r\n            case 'Transactions':\r\n                return (this.wrapPage(<Transactions />));\r\n            case 'Account':\r\n                return (this.wrapPage(<Account />));\r\n            default:\r\n                return (this.wrapPage(<Home />));\r\n        }*/\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorMessage: state.errors\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setAccounts, setTransactions, transError })(App);","const DEFAULT_STATE = {\r\n    accounts: []\r\n}\r\n\r\nconst sortAccounts = (state) => {\r\n    let newState = {\r\n        accounts: [ ...state.accounts ]\r\n    };\r\n    newState.accounts.forEach(account => {\r\n    });\r\n    return newState;\r\n};\r\n\r\nconst accountReducer = (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ACCOUNTS':\r\n            return action.payload;\r\n        case 'ADD_FUNDS':\r\n            const idxAdd = state.accounts.findIndex(t => t._id = action.payload.acctID);\r\n            state.accounts[idxAdd].balance = parseFloat(state.accounts[idxAdd].balance) + parseFloat(action.payload['amount']);\r\n            return sortAccounts(state);\r\n        case 'BROKE_NOW':\r\n            const idxSub = state.accounts.findIndex(t => t._id = action.payload.acctID);\r\n            state.accounts[idxSub].balance = parseFloat(state.accounts[idxSub].balance) - parseFloat(action.payload['amount']);\r\n            return sortAccounts(state);\r\n        case 'DELETE_ACCOUNT':\r\n            const idx = state.accounts.findIndex(t => t._id === action.payload);\r\n            state.accounts.splice(idx, 1);\r\n            return sortAccounts(state);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default accountReducer;","const DEFAULT_STATE = {\r\n    transactions: []\r\n}\r\n\r\nconst sortTrans = (state) => {\r\n    let newState = {\r\n        transactions: [ ...state.transactions ]\r\n    }\r\n    newState.transactions.forEach(transaction => {\r\n\r\n        });\r\n    return newState;\r\n}\r\n\r\nconst transReducer = (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TRANSACTIONS':\r\n            return action.payload;\r\n        case 'CHANGE_FUNDS':\r\n            let newTrans = {\r\n                '_id': state.transactions.length,\r\n                'accountId': action.payload['accountId'],\r\n                'type': action.payload['type'],\r\n                'amount': action.payload['amount'],\r\n                'name': action.payload['name']\r\n            }\r\n            state.transactions.push(newTrans);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default transReducer;","import { combineReducers } from 'redux';\r\nimport accountReducer from \"./accountReducer\";\r\nimport transReducer from \"./transReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    accounts: accountReducer,\r\n    transactions: transReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.css';\nimport App from './components/App';\nimport reducers from './reducers'\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}